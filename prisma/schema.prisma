generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  services  Service[]
  biddings  Bidding[]
  tasks     Task[]
  emails    Email[]   // Link emails sent/received by user
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Service {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  price       Float
  category    String?
  image       String?  // ðŸŒŸ Image locator for the service (e.g., image URL or path)
  emerges     Boolean  @default(false) // ðŸŒŸ New column for "emerges"
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  biddings    Bidding[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Bidding {
  id        Int      @id @default(autoincrement())
  amount    Float
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  service   Service  @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  serviceId Int
  createdAt DateTime @default(now())
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  isComplete  Boolean  @default(false)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Admin {
 id          Int      @id @default(autoincrement())
  username    String   @unique
  email       String   @unique
  password    String
  type        String
  profilePic  String?  // URL or path
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Email {
  id        Int      @id @default(autoincrement())
  to        String
  subject   String
  message   String
  sentAt    DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId    Int?
}
